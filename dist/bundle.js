import{createRequire as e}from"module";var n={738:(e,n,t)=>{const r=t(147),i=t(17),o=t(37),s=t(968).version,a=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/gm;function d(e){console.log(`[dotenv@${s}][DEBUG] ${e}`)}const p={config:function(e){let n=i.resolve(process.cwd(),".env"),t="utf8";const s=Boolean(e&&e.debug),a=Boolean(e&&e.override);var l;e&&(null!=e.path&&(n="~"===(l=e.path)[0]?i.join(o.homedir(),l.slice(1)):l),null!=e.encoding&&(t=e.encoding));try{const e=p.parse(r.readFileSync(n,{encoding:t}));return Object.keys(e).forEach((function(n){Object.prototype.hasOwnProperty.call(process.env,n)?(!0===a&&(process.env[n]=e[n]),s&&d(!0===a?`"${n}" is already defined in \`process.env\` and WAS overwritten`:`"${n}" is already defined in \`process.env\` and was NOT overwritten`)):process.env[n]=e[n]})),{parsed:e}}catch(e){return s&&d(`Failed to load ${n} ${e.message}`),{error:e}}},parse:function(e){const n={};let t,r=e.toString();for(r=r.replace(/\r\n?/gm,"\n");null!=(t=a.exec(r));){const e=t[1];let r=t[2]||"";r=r.trim();const i=r[0];r=r.replace(/^(['"`])([\s\S]*)\1$/gm,"$2"),'"'===i&&(r=r.replace(/\\n/g,"\n"),r=r.replace(/\\r/g,"\r")),n[e]=r}return n}};e.exports.config=p.config,e.exports.parse=p.parse,e.exports=p},147:n=>{n.exports=e(import.meta.url)("fs")},37:n=>{n.exports=e(import.meta.url)("os")},17:n=>{n.exports=e(import.meta.url)("path")},968:e=>{e.exports=JSON.parse('{"name":"dotenv","version":"16.0.3","description":"Loads environment variables from .env file","main":"lib/main.js","types":"lib/main.d.ts","exports":{".":{"require":"./lib/main.js","types":"./lib/main.d.ts","default":"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},"scripts":{"dts-check":"tsc --project tests/types/tsconfig.json","lint":"standard","lint-readme":"standard-markdown","pretest":"npm run lint && npm run dts-check","test":"tap tests/*.js --100 -Rspec","prerelease":"npm test","release":"standard-version"},"repository":{"type":"git","url":"git://github.com/motdotla/dotenv.git"},"keywords":["dotenv","env",".env","environment","variables","config","settings"],"readmeFilename":"README.md","license":"BSD-2-Clause","devDependencies":{"@types/node":"^17.0.9","decache":"^4.6.1","dtslint":"^3.7.0","sinon":"^12.0.1","standard":"^16.0.4","standard-markdown":"^7.1.0","standard-version":"^9.3.2","tap":"^15.1.6","tar":"^6.1.11","typescript":"^4.5.4"},"engines":{"node":">=12"}}')}},t={};function r(e){var i=t[e];if(void 0!==i)return i.exports;var o=t[e]={exports:{}};return n[e](o,o.exports,r),o.exports}r.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return r.d(n,{a:n}),n},r.d=(e,n)=>{for(var t in n)r.o(n,t)&&!r.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},r.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var n=r(738);const t=e(import.meta.url)("http"),i=[],o=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,s=function(e){return"string"==typeof e&&o.test(e)},a=e(import.meta.url)("crypto");var d=r.n(a);const p={randomUUID:d().randomUUID},l=new Uint8Array(256);let c=l.length;function u(){return c>l.length-16&&(d().randomFillSync(l),c=0),l.slice(c,c+=16)}const m=[];for(let e=0;e<256;++e)m.push((e+256).toString(16).slice(1));const f=function(e,n,t){if(p.randomUUID&&!n&&!e)return p.randomUUID();const r=(e=e||{}).random||(e.rng||u)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,n){t=t||0;for(let e=0;e<16;++e)n[t+e]=r[e];return n}return function(e,n=0){return(m[e[n+0]]+m[e[n+1]]+m[e[n+2]]+m[e[n+3]]+"-"+m[e[n+4]]+m[e[n+5]]+"-"+m[e[n+6]]+m[e[n+7]]+"-"+m[e[n+8]]+m[e[n+9]]+"-"+m[e[n+10]]+m[e[n+11]]+m[e[n+12]]+m[e[n+13]]+m[e[n+14]]+m[e[n+15]]).toLowerCase()}(r)};function g(e,n){const t=e.url;if("GET"===e.method){if("/api/users"===t||"/api/users/"===t)return((e,n)=>{try{n.writeHead(200,{"Content-Type":"application/json"}),n.end(JSON.stringify(i))}catch(e){n.writeHead(500,{"Content-Type":"text/plain"}),n.end("Something went wrong")}})(0,n);if(null==t?void 0:t.match(/\/api\/users\/[a-zA-Z0-9]{1,}/))return((e,n,t)=>{try{if(s(t)){const e=i.findIndex((e=>e.id===t));-1!==e&&i[e]?(n.writeHead(200,{"Content-Type":"application/json"}),n.end(JSON.stringify(i[e]))):(n.writeHead(404,{"Content-Type":"text/plain"}),n.end("userId doesn't exist"))}else n.writeHead(400,{"Content-Type":"text/plain"}),n.end("userId is invalid")}catch(e){n.writeHead(500,{"Content-Type":"text/plain"}),n.end("Something went wrong")}})(0,n,t.split("/")[3])}else if("POST"===e.method){if("/api/users"===t||"/api/users/"===t)return(async(e,n)=>{try{let t="";e.on("data",(e=>{t+=e.toString()})),e.on("end",(()=>{try{const e=JSON.parse(t);e.age&&e.username&&e.hobbies&&"string"==typeof e.username&&"number"==typeof e.age&&1==Array.isArray(e.hobbies)?(e.id=f(),i.push(e),n.writeHead(201,{"Content-Type":"application/json"}),n.end(JSON.stringify(e))):(n.writeHead(400,{"Content-Type":"text/plain"}),n.end("age(number) and username(string) and hobbies(array) are required fields with specific data types"))}catch(e){console.error(e),n.writeHead(400,{"Content-Type":"text/plain"}),n.end("Invalid JSON")}}))}catch(e){n.writeHead(500,{"Content-Type":"text/plain"}),n.end("Something went wrong")}})(e,n)}else if("PUT"===e.method){if(null==t?void 0:t.match(/\/api\/users\/[a-zA-Z0-9]{1,}/))return((e,n,t)=>{try{if(s(t)){let r="";e.on("data",(e=>{r+=e.toString()})),e.on("end",(()=>{try{const e=JSON.parse(r),o=i.findIndex((e=>e.id===t));-1!==o&&i[o]?(i[o]={id:i[o].id,username:e.username||i[o].username,age:e.age||i[o].age,hobbies:e.hobbies||i[o].hobbies},"string"!=typeof i[o].username||"number"!=typeof i[o].age||1!=Array.isArray(i[o].hobbies)?(n.writeHead(400,{"Content-Type":"text/plain"}),n.end("age(number) and username(string) and hobbies(array) are required fields with specific data types")):(n.writeHead(200,{"Content-Type":"application/json"}),n.end(JSON.stringify(i[o])))):(n.writeHead(404,{"Content-Type":"text/plain"}),n.end("userId doesn't exist"))}catch(e){console.error(e),n.writeHead(400,{"Content-Type":"text/plain"}),n.end("Invalid JSON")}}))}else n.writeHead(400,{"Content-Type":"text/plain"}),n.end("userId is invalid")}catch(e){n.writeHead(500,{"Content-Type":"text/plain"}),n.end("Something went wrong")}})(e,n,t.split("/")[3])}else if("DELETE"===e.method&&(null==t?void 0:t.match(/\/api\/users\/[a-zA-Z0-9]{1,}/)))return((e,n,t)=>{try{if(s(t)){const e=i.findIndex((e=>e.id===t));-1!==e&&i[e]?(i.splice(e,1),n.writeHead(204,{"Content-Type":"text/plain"}),n.end("")):(n.writeHead(404,{"Content-Type":"text/plain"}),n.end("userId doesn't exist"))}else n.writeHead(400,{"Content-Type":"text/plain"}),n.end("userId is invalid")}catch(e){n.writeHead(500,{"Content-Type":"text/plain"}),n.end("Something went wrong")}})(0,n,t.split("/")[3]);n.writeHead(404,{"Content-Type":"text/plain"}),n.end("Page not found")}var y;n.config();const v=process.env.PORT,h=null===(y=process.argv.find((e=>e.startsWith("--condition="))))||void 0===y?void 0:y.split("=")[1],w=t.createServer();w.on("request",((e,n)=>{"multi"===h?(console.log("мулти"),g(e,n)):(console.log("сингл"),g(e,n))})),w.listen(v,(()=>console.log(`Server is running on port ${v}`))),process.on("SIGINT",(()=>{process.exit()})),w.on("error",(e=>console.log(e.message)))})();