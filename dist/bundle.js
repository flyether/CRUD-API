import{createRequire as e}from"module";var t={738:(e,t,n)=>{const r=n(147),o=n(17),i=n(37),s=n(968).version,a=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/gm;function d(e){console.log(`[dotenv@${s}][DEBUG] ${e}`)}const p={config:function(e){let t=o.resolve(process.cwd(),".env"),n="utf8";const s=Boolean(e&&e.debug),a=Boolean(e&&e.override);var l;e&&(null!=e.path&&(t="~"===(l=e.path)[0]?o.join(i.homedir(),l.slice(1)):l),null!=e.encoding&&(n=e.encoding));try{const e=p.parse(r.readFileSync(t,{encoding:n}));return Object.keys(e).forEach((function(t){Object.prototype.hasOwnProperty.call(process.env,t)?(!0===a&&(process.env[t]=e[t]),s&&d(!0===a?`"${t}" is already defined in \`process.env\` and WAS overwritten`:`"${t}" is already defined in \`process.env\` and was NOT overwritten`)):process.env[t]=e[t]})),{parsed:e}}catch(e){return s&&d(`Failed to load ${t} ${e.message}`),{error:e}}},parse:function(e){const t={};let n,r=e.toString();for(r=r.replace(/\r\n?/gm,"\n");null!=(n=a.exec(r));){const e=n[1];let r=n[2]||"";r=r.trim();const o=r[0];r=r.replace(/^(['"`])([\s\S]*)\1$/gm,"$2"),'"'===o&&(r=r.replace(/\\n/g,"\n"),r=r.replace(/\\r/g,"\r")),t[e]=r}return t}};e.exports.config=p.config,e.exports.parse=p.parse,e.exports=p},147:t=>{t.exports=e(import.meta.url)("fs")},37:t=>{t.exports=e(import.meta.url)("os")},17:t=>{t.exports=e(import.meta.url)("path")},968:e=>{e.exports=JSON.parse('{"name":"dotenv","version":"16.0.3","description":"Loads environment variables from .env file","main":"lib/main.js","types":"lib/main.d.ts","exports":{".":{"require":"./lib/main.js","types":"./lib/main.d.ts","default":"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},"scripts":{"dts-check":"tsc --project tests/types/tsconfig.json","lint":"standard","lint-readme":"standard-markdown","pretest":"npm run lint && npm run dts-check","test":"tap tests/*.js --100 -Rspec","prerelease":"npm test","release":"standard-version"},"repository":{"type":"git","url":"git://github.com/motdotla/dotenv.git"},"keywords":["dotenv","env",".env","environment","variables","config","settings"],"readmeFilename":"README.md","license":"BSD-2-Clause","devDependencies":{"@types/node":"^17.0.9","decache":"^4.6.1","dtslint":"^3.7.0","sinon":"^12.0.1","standard":"^16.0.4","standard-markdown":"^7.1.0","standard-version":"^9.3.2","tap":"^15.1.6","tar":"^6.1.11","typescript":"^4.5.4"},"engines":{"node":">=12"}}')}},n={};function r(e){var o=n[e];if(void 0!==o)return o.exports;var i=n[e]={exports:{}};return t[e](i,i.exports,r),i.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var t=r(738);const n=e(import.meta.url)("http"),o=[],i=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,s=function(e){return"string"==typeof e&&i.test(e)},a=e(import.meta.url)("crypto");var d=r.n(a);const p={randomUUID:d().randomUUID},l=new Uint8Array(256);let c=l.length;function u(){return c>l.length-16&&(d().randomFillSync(l),c=0),l.slice(c,c+=16)}const m=[];for(let e=0;e<256;++e)m.push((e+256).toString(16).slice(1));const g=function(e,t,n){if(p.randomUUID&&!t&&!e)return p.randomUUID();const r=(e=e||{}).random||(e.rng||u)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,t){n=n||0;for(let e=0;e<16;++e)t[n+e]=r[e];return t}return function(e,t=0){return(m[e[t+0]]+m[e[t+1]]+m[e[t+2]]+m[e[t+3]]+"-"+m[e[t+4]]+m[e[t+5]]+"-"+m[e[t+6]]+m[e[t+7]]+"-"+m[e[t+8]]+m[e[t+9]]+"-"+m[e[t+10]]+m[e[t+11]]+m[e[t+12]]+m[e[t+13]]+m[e[t+14]]+m[e[t+15]]).toLowerCase()}(r)};t.config();const f=process.env.PORT,y=n.createServer();y.on("request",((e,t)=>{var n,r,i;if("GET"==e.method&&"/api/users"==e.url||"GET"==e.method&&"/api/users/"==e.url)return((e,t)=>{try{t.writeHead(200,{"Content-Type":"application/json"}),t.end(JSON.stringify(o))}catch(e){t.writeHead(500,{"Content-Type":"text/plain"}),t.end("Something went wrong")}})(0,t);if("GET"==e.method&&(null===(n=e.url)||void 0===n?void 0:n.match(/\/api\/users\/[a-zA-Z0-9]{1,}/)))return((e,t,n)=>{try{if(s(n)){const e=o.findIndex((e=>e.id===n));-1!==e&&o[e]?(t.writeHead(200,{"Content-Type":"application/json"}),t.end(JSON.stringify(o[e]))):(t.writeHead(404,{"Content-Type":"text/plain"}),t.end("userId doesn't exist"))}else t.writeHead(400,{"Content-Type":"text/plain"}),t.end("userId is invalid")}catch(e){t.writeHead(500,{"Content-Type":"text/plain"}),t.end("Something went wrong")}})(0,t,e.url.split("/")[3]);if("POST"==e.method&&"/api/users"==e.url||"POST"==e.method&&"/api/users/"===e.url)return(async(e,t)=>{try{let n="";e.on("data",(e=>{n+=e.toString()})),e.on("end",(()=>{try{const e=JSON.parse(n);e.age&&e.username&&e.hobbies&&"string"==typeof e.username&&"number"==typeof e.age&&1==Array.isArray(e.hobbies)?(e.id=g(),o.push(e),t.writeHead(201,{"Content-Type":"application/json"}),t.end(JSON.stringify(e))):(t.writeHead(400,{"Content-Type":"text/plain"}),t.end("age(number) and username(string) and hobbies(array) are required fields with specific data types"))}catch(e){console.error(e),t.writeHead(400,{"Content-Type":"text/plain"}),t.end("Invalid JSON")}}))}catch(e){t.writeHead(500,{"Content-Type":"text/plain"}),t.end("Something went wrong")}})(e,t);if("PUT"==e.method&&(null===(r=e.url)||void 0===r?void 0:r.match(/\/api\/users\/[a-zA-Z0-9]{1,}/))){const n=e.url.split("/")[3];return((e,t,n)=>{try{if(s(n)){let r="";e.on("data",(e=>{r+=e.toString()})),e.on("end",(()=>{try{const e=JSON.parse(r),i=o.findIndex((e=>e.id===n));-1!==i&&o[i]?(o[i]={id:o[i].id,username:e.username||o[i].username,age:e.age||o[i].age,hobbies:e.hobbies||o[i].hobbies},t.writeHead(200,{"Content-Type":"application/json"}),t.end(JSON.stringify(o[i]))):(t.writeHead(404,{"Content-Type":"text/plain"}),t.end("userId doesn't exist"))}catch(e){console.error(e),t.writeHead(400,{"Content-Type":"text/plain"}),t.end("Invalid JSON")}}))}else t.writeHead(400,{"Content-Type":"text/plain"}),t.end("userId is invalid")}catch(e){t.writeHead(500,{"Content-Type":"text/plain"}),t.end("Something went wrong")}})(e,t,n)}if("DELETE"==e.method&&(null===(i=e.url)||void 0===i?void 0:i.match(/\/api\/users\/[a-zA-Z0-9]{1,}/)))return((e,t,n)=>{try{if(s(n)){const e=o.findIndex((e=>e.id===n));-1!==e&&o[e]?(o.splice(e,1),t.writeHead(204,{"Content-Type":"text/plain"}),t.end("")):(t.writeHead(404,{"Content-Type":"text/plain"}),t.end("userId doesn't exist"))}else t.writeHead(400,{"Content-Type":"text/plain"}),t.end("userId is invalid")}catch(e){t.writeHead(500,{"Content-Type":"text/plain"}),t.end("Something went wrong")}})(0,t,e.url.split("/")[3]);t.writeHead(404,{"Content-Type":"text/plain"}),t.end("Page not found")})),y.listen(f,(()=>console.log(`Server is running on port ${f}`))),process.on("SIGINT",(()=>{console.log("остановка сервера"),process.exit()}))})();